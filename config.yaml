# Generate with ergogen.xyz

meta:
  engine: 4.0.4
  name: sentinel&scourge
  version: 0.1
  author: garrettfaucher
  url: https://github.com/garrettfaucher/sentinel-and-scourge

units:
  # Proxy Spacing Variables
  kx: u
  ky: u
  # Padding Variables
  px: kx + 2
  py: ky + 2
  # Shift Variable
  sh: 0.125kx
  # Keycap Size
  kc: 18
points:
  zones:
    matrix:
      anchor:
        shift: [70, -200]
      key:
        padding: 1ky
        spread: 1kx
      columns:
        # Provide a Sofle-like column stagger.
        outer:
          key.column_net: col_outer
          key.mirror.column_net: mirror_col_outer
          rows:
            # Logic to resize and place traditional u with keys
            num:
            top:
              width: 1.5kx
              adjust.shift: [-(((u*1.5)-u)/2)-0.5, 0]
              asym: source
              tags:
                150u: true
            home:
              width: 1.75kx
              adjust.shift: [-(((u*1.75)-u)/2)-0.5, 0]
              asym: source
              tags:
                175u: true
            bottom:
              width: 2.25kx
              adjust.shift: [-(((u*2.25)-u)/2)-0.5, 0]
              asym: source
              tags:
                225u: false
            mod:
              width: 1.25kx
              adjust.shift: [-(((u*1.25)-u)/2)-(((u*1.25)-u)/2)-3.875, 0]
              tags:
                125u: true
        pinky:
          key.column_net: col_pinky
          key.mirror.column_net: mirror_col_pinky
          # Using pinky key for alt key
          rows.mod:
            width: 1.25kx
            adjust.shift: [-(((u*1.25)-u)/2)-0.5,0]
            tags:
                125u: true
        ring:
          key.column_net: col_ring
          key.mirror.column_net: mirror_col_ring
          key:
            stagger: 0.5kx
          rows.mod.skip: true
        middle:
          key:
            stagger: 0.125kx
            column_net: col_middle
            mirror.column_net: mirror_col_middle
          rows.mod.skip: true
        index:
          key:
            stagger: -0.125kx
            column_net: col_index
            mirror.column_net: mirror_col_index
        inner:
          rows.mod.skip: true
          key:
            stagger: -0.125kx
            column_net: col_inner
            mirror.column_net: mirror_col_inner
      rows:
        mod:
          row_net: row_mod
          mirror.row_net: mirror_row_mod
          tags:
            upper_diode: true
        bottom:
          row_net: row_bottom
          mirror.row_net: mirror_row_bottom
          tags:
            upper_diode: true 
        home:
          row_net: row_home
          mirror.row_net: mirror_row_home
          tags:
            lower_diode: true
        top:
          row_net: row_top
          mirror.row_net: mirror_row_top
          tags:
            upper_diode: true
        num:
          row_net: row_num
          mirror.row_net: mirror_row_num
          tags:
            lower_diode: true
    right_pinky:
      key:
        padding: 1ky
        spread: 1kx
      anchor:
        ref: matrix_pinky_bottom
        shift: [-1u,0]
      columns:
        outer:
          key.column_net: col_outer
          key.mirror.column_net: mirror_col_outer
          rows:
            bottom:
              row_net: row_bottom
              mirror.row_net: mirror_row_bottom
              asym: clone
              width: 2.75kx
              adjust.shift: [-(((u*2.75)-u)/2)-0.5, 0]
              tags:
                  275u: true
                  upper_diode: true
            home:
              row_net: row_home
              mirror.row_net: mirror_row_home
              asym: clone
              width: 2.25kx
              adjust.shift: [-(((u*2.25)-u)/2)-0.5, 0]
              tags:
                  225u: true
                  lower_diode: true
            top:
              row_net: mirror_row_top
              asym: clone
              width: 1.5kx
              adjust.shift: [-(((u*1.5)-u)/2)-0.5, 0]
              tags:
                  150u: true
                  upper_diode: true
      rows:
        bottom:
        home:
        top:

  # Thumb cluster for Layer and Space keys.
    thumbs:
      key:
        padding: 1kx
        spread: 1kx
      # Place thumbs where the inner mod would go.
      anchor:
        ref: matrix_inner_mod
        shift: [2, -2]
      columns:
        layer:
          key:
            column_net: col_inner
            mirror.column_net: mirror_col_inner
            splay: -15
            tags:
              overhang: true
        space:
          key:
            column_net: col_inner
            mirror.column_net: mirror_col_inner
            width: 1.25kx
            splay: 75
            shift: [0.75,-3.25]
            tags:
              125u: true
      rows:
        # Thumbs only have one row.
        cluster:
          row_net: row_mod
          mirror.row_net: mirror_row_mod
          tags:
            upper_diode: true
    mcu:
      key:
        tags: part
        name: mcu
      anchor:
        ref: matrix_inner_top
        shift: [1kx,0.5ky]
    encoder:
      key:
        tags: part
        name: encoder
      anchor:
        ref: matrix_ring_bottom
        shift: [0.5kx,-21.5]
    power_swtich:
      key:
        tags: part
        name: power_swtich
      anchor:
        ref: mcu
        shift: [0.4kx,-2.5ky]
    reset_button:
      key:
        tags: part
        name: reset_button
      anchor:
        ref: mcu
        shift: [0.4kx,-2ky]

  mirror: &mirror
    ref: matrix_inner_num
    distance: 5px

outlines:
  # Key outlines per u width
  master_outline:
    - what: rectangle
      where: /(matrix|thumbs|right_pinky)_/
      size: [kx, ky]
    - what: rectangle
      where: "meta.tags ~ 125u"
      operation: add
      size: [1.25kx, ky]
    - what: rectangle
      where: "meta.tags ~ 150u"
      operation: add
      size: [1.50kx, ky]
    - what: rectangle
      where: "meta.tags ~ 175u"
      operation: add
      size: [1.75kx, ky]
    - what: rectangle
      where: "meta.tags ~ 200u"
      operation: add
      size: [2.00kx, ky]
    - what: rectangle
      where: "meta.tags ~ 225u"
      operation: add
      size: [2.25kx, ky]
    - what: rectangle
      where: "meta.tags ~ 275u"
      operation: add
      size: [2.75kx, ky]
    # This is a housecleaning box to clean up an unugly overhang
    - what: rectangle
      where: "meta.tags ~ overhang"
      operation: add
      size: [1.5kx, ky]
    # Fixing thumb layer gaps
    - what: rectangle
      where: /.*thumbs_layer_cluster/
      operation: add
      size: [2kx, ky]
    - what: rectangle
      where: /.*thumbs_layer_cluster/
      operation: add
      size: [kx, ky]
      adjust.shift: [0,1ky]
    # Fixing gaps between werid u keys
    - what: rectangle
      where: 
        - /.*matrix_outer_.*/
        - /.*right_pinky_outer_.*/
      operation: add
      size: [1kx, ky]
      adjust.shift: [1kx, 0]

  # Manual boxing for controller, encoder, etc
  manual_boxes:
    - what: rectangle
      where:
        - /.*mcu.*/
      operation: add
      size: [1kx, 4.5ky]
      adjust.shift: [0, -1.25ky]
    - what: rectangle
      where:
        - /.*matrix_ring_bottom/
        - /.*matrix_middle_bottom/
        - /.*matrix_index_bottom/
      size: [2kx,1ky]
      adjust.shift: [0, -1ky]
  left_blocker:
    - what: rectangle
      where: matrix_middle_home
      operation: add
      size: [11kx, 10ky]
  right_blocker:
    - what: rectangle
      where: mirror_matrix_middle_home
      operation: add
      size: [11kx, 10ky]
  pcb_outline:
    - name: master_outline
    - operation: add
      name: manual_boxes
  sentinel_pcb_outline:
    - name: pcb_outline
    - operation: subtract
      name: right_blocker
  scourge_pcb_outline:
    - name: pcb_outline
    - operation: subtract
      name: left_blocker
  switch_plate:
    - what: rectangle
      where: /(matrix|thumbs|right_pinky)_/
      size: [14,14]
  sentinel_bottom_plate:
    - name: sentinel_pcb_outline
    - operation: subtract
      name: scourge_pcb_outline
  sentinel_top_plate:
    - name: sentinel_bottom_plate
    - operation: subtract
      name: switch_plate
  scourge_bottom_plate:
    - name: scourge_pcb_outline
    - operation: subtract
      name: sentinel_pcb_outline
  scourge_top_plate:
    - name: scourge_bottom_plate
    - operation: subtract
      name: switch_plate
 
pcbs:
  sentinel:
    outlines:
      main:
        outline: sentinel_pcb_outline
        layer: Edge.Cuts
    footprints:
      mx_hotswap:
        what: mx
        where:
          - /(?<!mirror_)matrix.*/
          - /(?<!mirror_)thumbs.*/
        params:
          keycaps: true
          reverse: false
          hotswap: true
          from: "{{column_net}}"
          to: "{{colrow}}"
      left_lower_diode:
        what: diode
        where:
          - /(?<!mirror_)matrix.*_num/
          - /(?<!mirror_)matrix.*_home/
          - /(?<!mirror_)thumbs.*_home/
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
        adjust.shift: [0.2kx, -0.3kx]
      left_upper_diode:
        what: diode
        where:
          - /(?<!mirror_)matrix_.*_top/
          - /(?<!mirror_)matrix_.*_bottom/
          - /(?<!mirror_)matrix_.*_mod/
          - /(?<!mirror_)thumbs.*/
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
        adjust.shift: [0.2kx, 0.57kx]
      promicro_left:
        what: promicro
        params:
          orientation: "down"
          P19: col_outer
          P18: col_pinky
          P15: col_ring
          P14: col_middle
          P16: col_index
          P10: col_inner
          P5:  row_num
          P6:  row_top
          P7:  row_home
          P8:  row_bottom
          P9:  row_mod
        where:
          ref: mcu
          rotate: -90
      left_power_swtich:
        what: slider
        params:
          from: RAW
          to: GND
        where:
          ref: power_swtich
          rotate: -90
      # left_reset_button:
      #   what: reset_button
      #   params:
      #     from: RST
      #     to: GND
      #   where:
      #     ref: reset_button
      #     rotate: -90
      left_rotary_encoder:
        what: rotary
        params:
          from: col_middle
          to: row_mod
          A: P21
          B: GND
          C: P20
        where:
          ref: encoder
  sentinel_top_plate:
    outlines:
      edge:
        outline: sentinel_top_plate
        layer: Edge.Cuts
  sentinel_bottom_plate:
    outlines:
      edge:
        outline: sentinel_bottom_plate
        layer: Edge.Cuts
  scourge:
    outlines:
      main:
        outline: scourge_pcb_outline
        layer: Edge.Cuts
    footprints:
      mx_hotswap:
        what: mx
        where: 
          - /mirror_matrix.*/
          - /mirror_thumbs.*/
          - /right_pinky.*/
        params:
          keycaps: true
          reverse: false
          hotswap: true
          from: "{{column_net}}"
          to: "{{colrow}}"
      right_lower_diode:
        what: diode
        where:
          - /mirror_matrix_.*_num/
          - /mirror_matrix_.*_home/
          - /right_pinky_.*_home/
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
        adjust.shift: [0.2kx, -0.3kx]
      right_upper_diode:
        what: diode
        where:
          - /mirror_matrix_.*_top/
          - /mirror_matrix_.*_bottom/
          - /mirror_matrix_.*_mod/
          - /right_pinky_.*_top/
          - /right_pinky_.*_bottom/
          - /right_pinky_.*_mod/
          - /mirror_thumbs.*/
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
        adjust.shift: [0.2kx, 0.57kx]
        # rotate: 180
      promicro_right:
        what: promicro
        params:
          orientation: "down"
          P19: mirror_col_outer
          P18: mirror_col_pinky
          P15: mirror_col_ring
          P14: mirror_col_middle
          P16: mirror_col_index
          P10: mirror_col_inner
          P5: mirror_row_num
          P6: mirror_row_top
          P7: mirror_row_home
          P8: mirror_row_bottom
          P9: mirror_row_mod
        where:
          ref: mirror_mcu
          rotate: 90
      right_rotary_encoder:
        what: rotary
        params:
          from: mirror_col_middle
          to: mirror_row_mod
          A: mirror_P21
          B: GND
          C: mirror_P20
        where:
          ref: mirror_encoder
          rotate: 180
  scourge_top_plate:
    outlines:
      edge:
        outline: scourge_top_plate
        layer: Edge.Cuts
  scourge_bottom_plate:
    outlines:
      edge:
        outline: scourge_bottom_plate
        layer: Edge.Cuts